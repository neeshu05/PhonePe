Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.


output = [ suf_({N-1} * 1, suf_{N-2} * pre_0, ..., suf_0*pre_{N-2}, pre_{N-1} ]

class Solution(object):
    def productExceptSelf(self, nums):
        output = [1]*len(nums)
        pre = 1
        suf = 1
        for i in range(len(nums) - 1):
            pre *= nums[i]
            suf *= nums[-i-1]
            output[i+1]  *= pre
            output[-i-2] *= suf
            
        return output
